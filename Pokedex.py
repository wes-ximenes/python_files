import requests #biblioteca que permite voce acessar infos na nuvem, como por exemplo essa API usada 'PokeAPI'

def buscar_pokemon(nome): #Define uma fun√ß√£o, 'buscar_pokemon' e o nome que voce digitar
    url = f"https://pokeapi.co/api/v2/pokemon/{nome.lower()}" #Criando a url da API, padronizando o nome digitado em minusculo para evitar erro na API
<<<<<<< HEAD
    resposta = requests.get(url) #faz uma requisi√ß√£o HTTP GET a URL e a 'resposta' vai armazenar as infos que a API desenvolver perante sua busca.

=======

    resposta = requests.get(url) #faz uma requisi√ß√£o HTTP GET a URL e a 'resposta' vai armazenar as infos que a API desenvolver perante sua busca.

>>>>>>> da2d33e (update new python files)
    if resposta.status_code == 200: #C√≥digo 200 √© o cod que deu tudo certo (cod 404 = erro)
        dados = resposta.json() #Converte os dados em json (dados estruturados, como um dicion√°rio)
        print(f"\nüìõ Nome: {dados['name'].capitalize()}")
        print(f"üÜî ID: {dados['id']}")
        print("üß¨ Tipos:")
        for tipo in dados['types']: #'Tipo' √© o unico dado que possui uma lista de tipos (fogo, agua, etc), e o 'for' faz ele acessar a lista de tipos para buscar o dado.
            print(f" - {tipo['type']['name'].capitalize()}")
        print(f"‚öñÔ∏è Peso: {dados['weight'] / 10} kg")
        print(f"üìè Altura: {dados['height'] / 10} m")
    else:
        print("‚ùå Pok√©mon n√£o encontrado.")

# Loop interativo
while True: #Vai ficar pedindo um novo nome de busca at√© vc digitar 'sair'.
    nome = input("\nDigite o nome do Pok√©mon (ou 'sair'): ")
    if nome.lower() == 'sair':
        break
    buscar_pokemon(nome) #Necess√°rio chamar a fun√ß√£o sempre que houver um 'input', para leitura e execu√ß√£o do input.
